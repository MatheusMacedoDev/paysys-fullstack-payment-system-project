// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using paysys.webapi.Infra.Data;

#nullable disable

namespace paysys.webapi.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250114165639_SeedingDataForUsers")]
    partial class SeedingDataForUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("paysys.webapi.Domain.Entities.AdministratorUser", b =>
                {
                    b.Property<Guid>("AdministratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("administrator_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("AdministratorId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("administrator_users");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.CommonUser", b =>
                {
                    b.Property<Guid>("CommonUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("common_user_id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("MONEY")
                        .HasColumnName("balance");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("CommonUserId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("common_users");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.Shopkeeper", b =>
                {
                    b.Property<Guid>("ShopkeeperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("shopkeeper_id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("MONEY")
                        .HasColumnName("balance");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("ShopkeeperId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("shopkeepers");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.Transfer", b =>
                {
                    b.Property<Guid>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("transfer_id");

                    b.Property<Guid>("ReceiverUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("receiver_user_id");

                    b.Property<Guid>("SenderUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("sender_user_id");

                    b.Property<decimal>("TransferAmount")
                        .HasColumnType("MONEY")
                        .HasColumnName("transfer_amount");

                    b.Property<Guid>("TransferCategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("transfer_category_id");

                    b.Property<DateTime>("TransferDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("transfer_datetime");

                    b.Property<Guid>("TransferStatusId")
                        .HasColumnType("uuid")
                        .HasColumnName("transfer_status_id");

                    b.HasKey("TransferId");

                    b.HasIndex("ReceiverUserId");

                    b.HasIndex("SenderUserId");

                    b.HasIndex("TransferCategoryId");

                    b.HasIndex("TransferStatusId");

                    b.ToTable("transfers");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.TransferCategory", b =>
                {
                    b.Property<Guid>("TransferCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("transfer_category_id");

                    b.HasKey("TransferCategoryId");

                    b.ToTable("transfer_categories");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.TransferStatus", b =>
                {
                    b.Property<Guid>("TransferStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("transfer_status_id");

                    b.HasKey("TransferStatusId");

                    b.ToTable("transfer_status");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_updated_on");

                    b.Property<Guid>("UserTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_type_id");

                    b.HasKey("UserId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("3c56843f-fd7a-41bd-8e14-a6b4832fa6fb"),
                            CreatedOn = new DateTime(2025, 1, 14, 16, 56, 38, 553, DateTimeKind.Utc).AddTicks(4826),
                            LastUpdatedOn = new DateTime(2025, 1, 14, 16, 56, 38, 553, DateTimeKind.Utc).AddTicks(4826),
                            UserTypeId = new Guid("0eb973a0-8788-44ca-816b-2ed7dd2ea7e4")
                        },
                        new
                        {
                            UserId = new Guid("46121131-1507-4470-83ea-dd0439c51b4c"),
                            CreatedOn = new DateTime(2025, 1, 14, 16, 56, 38, 553, DateTimeKind.Utc).AddTicks(4837),
                            LastUpdatedOn = new DateTime(2025, 1, 14, 16, 56, 38, 553, DateTimeKind.Utc).AddTicks(4837),
                            UserTypeId = new Guid("b3a1ff2a-a9e4-4024-8ef7-410da9ea8433")
                        },
                        new
                        {
                            UserId = new Guid("8499d00f-fac1-4296-9b2c-d2143cbf1563"),
                            CreatedOn = new DateTime(2025, 1, 14, 16, 56, 38, 553, DateTimeKind.Utc).AddTicks(4845),
                            LastUpdatedOn = new DateTime(2025, 1, 14, 16, 56, 38, 553, DateTimeKind.Utc).AddTicks(4845),
                            UserTypeId = new Guid("349293cd-cbf6-45ce-a8a5-593a32519d46")
                        });
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.UserType", b =>
                {
                    b.Property<Guid>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("user_type_id");

                    b.HasKey("UserTypeId");

                    b.ToTable("user_types");

                    b.HasData(
                        new
                        {
                            UserTypeId = new Guid("0eb973a0-8788-44ca-816b-2ed7dd2ea7e4")
                        },
                        new
                        {
                            UserTypeId = new Guid("b3a1ff2a-a9e4-4024-8ef7-410da9ea8433")
                        },
                        new
                        {
                            UserTypeId = new Guid("349293cd-cbf6-45ce-a8a5-593a32519d46")
                        });
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.AdministratorUser", b =>
                {
                    b.HasOne("paysys.webapi.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.CPF", "AdministratorCPF", b1 =>
                        {
                            b1.Property<Guid>("AdministratorUserAdministratorId")
                                .HasColumnType("uuid");

                            b1.Property<string>("CPFText")
                                .IsRequired()
                                .HasColumnType("CHAR(11)")
                                .HasColumnName("administrator_cpf");

                            b1.HasKey("AdministratorUserAdministratorId");

                            b1.ToTable("administrator_users");

                            b1.WithOwner()
                                .HasForeignKey("AdministratorUserAdministratorId");
                        });

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.Name", "AdministratorName", b1 =>
                        {
                            b1.Property<Guid>("AdministratorUserAdministratorId")
                                .HasColumnType("uuid");

                            b1.Property<string>("NameText")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("administrator_name");

                            b1.HasKey("AdministratorUserAdministratorId");

                            b1.ToTable("administrator_users");

                            b1.WithOwner()
                                .HasForeignKey("AdministratorUserAdministratorId");
                        });

                    b.Navigation("AdministratorCPF");

                    b.Navigation("AdministratorName");

                    b.Navigation("User");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.CommonUser", b =>
                {
                    b.HasOne("paysys.webapi.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.CPF", "CommonUserCPF", b1 =>
                        {
                            b1.Property<Guid>("CommonUserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("CPFText")
                                .IsRequired()
                                .HasColumnType("CHAR(11)")
                                .HasColumnName("common_user_cpf");

                            b1.HasKey("CommonUserId");

                            b1.ToTable("common_users");

                            b1.WithOwner()
                                .HasForeignKey("CommonUserId");
                        });

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.Name", "CommonUserName", b1 =>
                        {
                            b1.Property<Guid>("CommonUserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("NameText")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("common_user_name");

                            b1.HasKey("CommonUserId");

                            b1.ToTable("common_users");

                            b1.WithOwner()
                                .HasForeignKey("CommonUserId");
                        });

                    b.Navigation("CommonUserCPF");

                    b.Navigation("CommonUserName");

                    b.Navigation("User");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.Shopkeeper", b =>
                {
                    b.HasOne("paysys.webapi.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.CorporateName", "CompanyName", b1 =>
                        {
                            b1.Property<Guid>("ShopkeeperId")
                                .HasColumnType("uuid");

                            b1.Property<string>("NameText")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("company_name");

                            b1.HasKey("ShopkeeperId");

                            b1.HasIndex("NameText")
                                .IsUnique();

                            b1.ToTable("shopkeepers");

                            b1.WithOwner()
                                .HasForeignKey("ShopkeeperId");
                        });

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.CorporateName", "FancyName", b1 =>
                        {
                            b1.Property<Guid>("ShopkeeperId")
                                .HasColumnType("uuid");

                            b1.Property<string>("NameText")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("fancy_name");

                            b1.HasKey("ShopkeeperId");

                            b1.ToTable("shopkeepers");

                            b1.WithOwner()
                                .HasForeignKey("ShopkeeperId");
                        });

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.CNPJ", "ShopkeeperCNJP", b1 =>
                        {
                            b1.Property<Guid>("ShopkeeperId")
                                .HasColumnType("uuid");

                            b1.Property<string>("CNPJText")
                                .IsRequired()
                                .HasColumnType("CHAR(14)")
                                .HasColumnName("shopkeeper_cnpj");

                            b1.HasKey("ShopkeeperId");

                            b1.ToTable("shopkeepers");

                            b1.WithOwner()
                                .HasForeignKey("ShopkeeperId");
                        });

                    b.Navigation("CompanyName");

                    b.Navigation("FancyName");

                    b.Navigation("ShopkeeperCNJP");

                    b.Navigation("User");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.Transfer", b =>
                {
                    b.HasOne("paysys.webapi.Domain.Entities.User", "ReceiverUser")
                        .WithMany()
                        .HasForeignKey("ReceiverUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("paysys.webapi.Domain.Entities.User", "SenderUser")
                        .WithMany()
                        .HasForeignKey("SenderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("paysys.webapi.Domain.Entities.TransferCategory", "TransferCategory")
                        .WithMany()
                        .HasForeignKey("TransferCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("paysys.webapi.Domain.Entities.TransferStatus", "TransferStatus")
                        .WithMany()
                        .HasForeignKey("TransferStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.Description", "TransferDescription", b1 =>
                        {
                            b1.Property<Guid>("TransferId")
                                .HasColumnType("uuid");

                            b1.Property<string>("DescriptionText")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("transfer_description");

                            b1.HasKey("TransferId");

                            b1.ToTable("transfers");

                            b1.WithOwner()
                                .HasForeignKey("TransferId");
                        });

                    b.Navigation("ReceiverUser");

                    b.Navigation("SenderUser");

                    b.Navigation("TransferCategory");

                    b.Navigation("TransferDescription");

                    b.Navigation("TransferStatus");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.TransferCategory", b =>
                {
                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.Name", "TransferCategoryName", b1 =>
                        {
                            b1.Property<Guid>("TransferCategoryId")
                                .HasColumnType("uuid");

                            b1.Property<string>("NameText")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("transfer_category_name");

                            b1.HasKey("TransferCategoryId");

                            b1.HasIndex("NameText")
                                .IsUnique();

                            b1.ToTable("transfer_categories");

                            b1.WithOwner()
                                .HasForeignKey("TransferCategoryId");
                        });

                    b.Navigation("TransferCategoryName");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.TransferStatus", b =>
                {
                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.Name", "TransferStatusName", b1 =>
                        {
                            b1.Property<Guid>("TransferStatusId")
                                .HasColumnType("uuid");

                            b1.Property<string>("NameText")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("transfer_status_name");

                            b1.HasKey("TransferStatusId");

                            b1.HasIndex("NameText")
                                .IsUnique();

                            b1.ToTable("transfer_status");

                            b1.WithOwner()
                                .HasForeignKey("TransferStatusId");
                        });

                    b.Navigation("TransferStatusName");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.User", b =>
                {
                    b.HasOne("paysys.webapi.Domain.Entities.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("EmailText")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("email");

                            b1.HasKey("UserId");

                            b1.HasIndex("EmailText")
                                .IsUnique();

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = new Guid("3c56843f-fd7a-41bd-8e14-a6b4832fa6fb"),
                                    EmailText = "augusto.diego@paysys.com"
                                },
                                new
                                {
                                    UserId = new Guid("46121131-1507-4470-83ea-dd0439c51b4c"),
                                    EmailText = "ian.elias@novonegocio.com"
                                },
                                new
                                {
                                    UserId = new Guid("8499d00f-fac1-4296-9b2c-d2143cbf1563"),
                                    EmailText = "gabriela.amanda@gmail.com"
                                });
                        });

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<byte[]>("Hash")
                                .IsRequired()
                                .HasColumnType("BYTEA")
                                .HasColumnName("password_hash");

                            b1.Property<byte[]>("Salt")
                                .IsRequired()
                                .HasColumnType("BYTEA")
                                .HasColumnName("password_salt");

                            b1.HasKey("UserId");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = new Guid("3c56843f-fd7a-41bd-8e14-a6b4832fa6fb"),
                                    Hash = new byte[] { 170, 88, 154, 122, 54, 152, 158, 118, 158, 154, 197, 61, 246, 108, 72, 60, 147, 232, 130, 253, 231, 194, 27, 66, 162, 185, 117, 175, 80, 1, 127, 174 },
                                    Salt = new byte[] { 220, 94, 212, 255, 55, 103, 101, 178, 34, 111, 184, 195, 232, 110, 5, 22 }
                                },
                                new
                                {
                                    UserId = new Guid("46121131-1507-4470-83ea-dd0439c51b4c"),
                                    Hash = new byte[] { 170, 88, 154, 122, 54, 152, 158, 118, 158, 154, 197, 61, 246, 108, 72, 60, 147, 232, 130, 253, 231, 194, 27, 66, 162, 185, 117, 175, 80, 1, 127, 174 },
                                    Salt = new byte[] { 220, 94, 212, 255, 55, 103, 101, 178, 34, 111, 184, 195, 232, 110, 5, 22 }
                                },
                                new
                                {
                                    UserId = new Guid("8499d00f-fac1-4296-9b2c-d2143cbf1563"),
                                    Hash = new byte[] { 170, 88, 154, 122, 54, 152, 158, 118, 158, 154, 197, 61, 246, 108, 72, 60, 147, 232, 130, 253, 231, 194, 27, 66, 162, 185, 117, 175, 80, 1, 127, 174 },
                                    Salt = new byte[] { 220, 94, 212, 255, 55, 103, 101, 178, 34, 111, 184, 195, 232, 110, 5, 22 }
                                });
                        });

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("PhoneNumberText")
                                .IsRequired()
                                .HasColumnType("CHAR(11)")
                                .HasColumnName("phone_number");

                            b1.HasKey("UserId");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = new Guid("3c56843f-fd7a-41bd-8e14-a6b4832fa6fb"),
                                    PhoneNumberText = "65996283505"
                                },
                                new
                                {
                                    UserId = new Guid("46121131-1507-4470-83ea-dd0439c51b4c"),
                                    PhoneNumberText = "65996283506"
                                },
                                new
                                {
                                    UserId = new Guid("8499d00f-fac1-4296-9b2c-d2143cbf1563"),
                                    PhoneNumberText = "65996283507"
                                });
                        });

                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.UserName", "UserName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<string>("NameText")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("user_name");

                            b1.HasKey("UserId");

                            b1.HasIndex("NameText")
                                .IsUnique();

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = new Guid("3c56843f-fd7a-41bd-8e14-a6b4832fa6fb"),
                                    NameText = "Augusto Diego Elias"
                                },
                                new
                                {
                                    UserId = new Guid("46121131-1507-4470-83ea-dd0439c51b4c"),
                                    NameText = "Ian Elias Murilo Oliveira"
                                },
                                new
                                {
                                    UserId = new Guid("8499d00f-fac1-4296-9b2c-d2143cbf1563"),
                                    NameText = "Gabriela Amanda Melo"
                                });
                        });

                    b.Navigation("Email");

                    b.Navigation("Password");

                    b.Navigation("PhoneNumber");

                    b.Navigation("UserName");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("paysys.webapi.Domain.Entities.UserType", b =>
                {
                    b.OwnsOne("paysys.webapi.Domain.ValueObjects.Name", "TypeName", b1 =>
                        {
                            b1.Property<Guid>("UserTypeId")
                                .HasColumnType("uuid");

                            b1.Property<string>("NameText")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("user_type_name");

                            b1.HasKey("UserTypeId");

                            b1.HasIndex("NameText")
                                .IsUnique();

                            b1.ToTable("user_types");

                            b1.WithOwner()
                                .HasForeignKey("UserTypeId");

                            b1.HasData(
                                new
                                {
                                    UserTypeId = new Guid("0eb973a0-8788-44ca-816b-2ed7dd2ea7e4"),
                                    NameText = "Administrador"
                                },
                                new
                                {
                                    UserTypeId = new Guid("b3a1ff2a-a9e4-4024-8ef7-410da9ea8433"),
                                    NameText = "Lojista"
                                },
                                new
                                {
                                    UserTypeId = new Guid("349293cd-cbf6-45ce-a8a5-593a32519d46"),
                                    NameText = "Comum"
                                });
                        });

                    b.Navigation("TypeName");
                });
#pragma warning restore 612, 618
        }
    }
}
